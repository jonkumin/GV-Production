import { WorkboxPlugin, CacheKeyWillBeUsedCallbackParam, CacheWillUpdateCallbackParamParam } from 'workbox-core/types';
export default class PrefetchPlugin implements WorkboxPlugin {
    private incrementHits;
    private incrementMisses;
    private cacheHost?;
    constructor({ incrementHits, incrementMisses, cacheHost, }: {
        incrementHits: Function;
        incrementMisses: Function;
        cacheHost?: URL;
    });
    /**
     * Called when an object is read from or written to the cache.  Here we
     * compute cache stats and ensure that ?xdn_prefetch is removed from the cache key so
     * that future requests for prefetched resources will match.
     */
    cacheKeyWillBeUsed({ request, mode }: CacheKeyWillBeUsedCallbackParam): Promise<string>;
    /**
     * Called when a response is about to be written to the cache.
     */
    cacheWillUpdate({ response }: CacheWillUpdateCallbackParamParam): Promise<Response | null>;
}
