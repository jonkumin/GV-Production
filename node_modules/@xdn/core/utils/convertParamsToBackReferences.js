"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var path_to_regexp_1 = require("path-to-regexp");
/**
 * Replaces named parameters in the specified path with back references so
 * that the edge can create a path using the matched params with a regex replace in VCL.
 * @param matcher A route-parser route
 * @param path The request path
 * @returns A path with params replaced by back references
 */
function convertParamsToBackReferences(source, dest) {
    var sourceTokens = {};
    if (source == null)
        return dest;
    // Back reference counting starts from 1
    var backReferenceCounter = 1;
    path_to_regexp_1.parse(source).forEach(function (token) {
        if (typeof token !== 'string') {
            sourceTokens[token.name] = backReferenceCounter++;
        }
    });
    // the dest URL can optionally include protocol and hostname,
    // but if we parse a full URL with pathToRegexp, it will throw an error, so
    // we only parse the pathname
    var destURL = new URL(dest, 'http://__');
    var destPath = path_to_regexp_1.parse(destURL.pathname)
        .map(function (token, i) {
        if (typeof token === 'string') {
            return token;
        }
        else {
            return "/\\" + sourceTokens[token.name];
        }
    })
        .join('');
    return destURL.hostname === '__'
        ? destPath + destURL.search
        : destURL.protocol + '//' + destURL.host + destPath + destURL.search;
}
exports.default = convertParamsToBackReferences;
