"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Binds params to path.
 *
 * Example:
 * ```js
 * bindParamsToPath('/:foo/:bar*', { foo: 'p1', bar: 'p2/p3' })
 * ```
 * Output: `/p1/p2/p3`
 *
 * @param path The path, with param substitutions in braces `{}`.
 * @param params An object with keys matching the params in braces.
 * @returns A string with the params substituted with their values.
 */
exports.default = (function (path, params) {
    var p = path;
    // We allow edge interpolation params which begin with `${` but we no longer
    // allow old path options that only begin with `{`.
    if (/(^|[^$]){/.test(path)) {
        throw new Error("{variable} syntax in the path option is no longer supported, use :variable instead (" + path + ")");
    }
    var _loop_1 = function (paramName) {
        var value = params[paramName];
        if (Array.isArray(value)) {
            value = value.join('/');
        }
        p = p.replace(new RegExp("(^|[^\\\\])[:*]" + paramName + "\\*?", 'g'), function (match, capture) { return "" + capture + value; });
    };
    for (var paramName in params) {
        _loop_1(paramName);
    }
    return p;
});
