import Route from './Route';
import Request from './Request';
import Response from './Response';
import ResponseWriter from './ResponseWriter';
import RequestContext from './RequestContext';
/**
 * Response writer used then core router is not on the edge.
 *
 * Notes:
 * - We need this to avoid running header and other transformations on
 * both edge and in the cloud. We do this by overriding the ResponseWriter
 * header transformation methods to noop.
 *
 * @private
 */
declare class BehindEdgeResponseWriter extends ResponseWriter {
    constructor(req: Request, res: Response, route: Route, context: RequestContext);
    setRequestHeader: (name: string, value: string) => void;
    updateRequestHeader: (name: string, match: RegExp, replace: string) => void;
    removeRequestHeader: (name: string) => void;
    setResponseHeader: (name: string, value: string) => void;
    updateResponseHeader: (name: string, match: RegExp, replace: string) => void;
    removeResponseHeader: (name: string) => void;
    setUpstreamResponseHeader: (name: string, value: string) => void;
    updateUpstreamResponseHeader: (name: string, match: RegExp, replace: string) => void;
    removeUpstreamResponseHeader: (name: string) => void;
    addResponseCookie: (name: string, value: string) => void;
    updateResponseCookie: (name: string, match: RegExp, replace: string) => void;
    removeResponseCookie: (name: string) => void;
    addUpstreamResponseCookie: (name: string, value: string) => void;
    updateUpstreamResponseCookie: (name: string, match: RegExp, replace: string) => void;
    removeUpstreamResponseCookie: (name: string) => void;
}
export default BehindEdgeResponseWriter;
